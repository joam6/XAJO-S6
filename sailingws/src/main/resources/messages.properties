# Validation messages
#AssertTrue
#Email
#Future
#FutureOrPresent 
javax.validation.constraints.Max.message= must be less than or equal to {value}
javax.validation.constraints.Min.message= must be greater than or equal to {value}
#Negative
#NegativeOrZero
javax.validation.constraints.NotBlank.message= must not be blank
javax.validation.constraints.NotEmpty.message= must not be empty
javax.validation.constraints.NotNull.message= must not be null
#Past
#PastOrPresent
javax.validation.constraints.Positive.message= must be greater than 0
#PositiveOrZero
javax.validation.constraints.Size.message= size must be between {min} and {max}

error.Trip.without.id=Could not find trip
error.Booking.wrong.date=Booking date must be after today
error.Booking.not.enough.places=Booking exceeds the maximum places 
error.Booking.same.date=Already exists a booking on the same date
error.Booking.wrong.departure=Wrong departure time {0}  
error.Tracking.performer=Performer is not valid {0}
error.Tracking.is.not.valid=Tracking is not valid
error.Tracking.before.close=Tracking action before close at position {0}
error.Tracking.is.not.empty=Tracking is not empty while booking
error.Tracking.is.empty=Tracking is empty, but must contain at least an Opening action
error.Tracking.is.null=Tracking is null
error.Tracking.action.not.allowed=Tracking action {0} not allowed after {1}
error.Tracking.is.booking=Booking is not allowed
error.Tracking.wrong.date=Tracking action date {0} is before previous {1}
error.Tracking.cancelation.client=Clients can only cancel up to 48 hours before
error.Tracking.wrong.rescheduling=Wrong rescheduling departure
error.NotFound.resource.by.id=Could not find {0}: {1} 
error.UserService.user.not.found=User {0} not found in database
error.UserService.username.exists=Username {0} already exists in database
error.Authentication.user.disabled=User disabled
error.Authentication.bad.credentials=Bad credentials
error.Authentication.access.denied=Access Denied
error.Forbidden.users.find=Clients can not access users directory
error.Forbidden.users.get=Clients can only get their own account
error.Forbidden.users.create=Clients can only create client accounts
error.Forbidden.users.update=Clients can only update their own account
error.Forbidden.users.delete=Clients can not delete accounts
error.Forbidden.trips.find=Clients can only access to their own trips
error.Forbidden.trips.booking=Only clients can book a trip
error.Forbidden.trips.rescheduling=Only admins can reschedule a trip
error.Forbidden.trips.done=Only admins can mark trips as done
error.Forbidden.trips.cancel=Clients can only cancel their own trips




